{
	"name": "df_SilverToGold_DW",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_silver_Sales",
						"type": "DatasetReference"
					},
					"name": "SalesCleansedData"
				},
				{
					"dataset": {
						"referenceName": "ds_silver_Products",
						"type": "DatasetReference"
					},
					"name": "ProductsCleansedData"
				},
				{
					"dataset": {
						"referenceName": "ds_silver_customers",
						"type": "DatasetReference"
					},
					"name": "CustomersCleansedData"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SaleID as integer,",
				"          CustomerID as integer,",
				"          ProductID as integer,",
				"          Quantity as integer,",
				"          SaleDate as string,",
				"          Revenue as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SalesCleansedData",
				"source(output(",
				"          productid as string,",
				"          productname as string,",
				"          productcategory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ProductsCleansedData",
				"source(output(",
				"          CustomerID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CustomersCleansedData",
				"SalesCleansedData, ProductsCleansedData join(SalesCleansedData@ProductID == ProductsCleansedData@productid,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}